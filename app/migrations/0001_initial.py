# Generated by Django 5.1.3 on 2024-11-26 21:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BalanceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_balance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма балансов пользователей')),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.CharField(max_length=128, verbose_name='ID чата в телеграмме')),
                ('join_time', models.DateTimeField(auto_now_add=True, verbose_name='Время присоединения')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=100, verbose_name='Баланс клиента')),
                ('referral_percent', models.IntegerField(default=1, verbose_name='Процент с покупок пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='Cripto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=8, verbose_name='Название криптовалюты')),
                ('course', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='Курс криптовалюты')),
            ],
        ),
        migrations.CreateModel(
            name='Mailing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('send_users', models.IntegerField(default=0, verbose_name='Какому кол-ву произошла отправка')),
                ('buy_users', models.IntegerField(default=0, verbose_name='Сколько пользователей в течении 72 совершили хотя бы 1 покупку')),
                ('buy_summ', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Сумма покупок с учетом доли ДК, МОПА и реферальной доли')),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Имя товара')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, verbose_name='Цена товара')),
                ('need_enter_price', models.BooleanField(default=False, verbose_name='Требуется ли ввод цены покуки?')),
            ],
        ),
        migrations.CreateModel(
            name='ClientActions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=256, verbose_name='Действие')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='app.client', verbose_name='Клиент')),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('commission_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Комиссионный баланс')),
                ('status', models.CharField(choices=[('online', 'Онлайн'), ('offline', 'Офлайн'), ('away', 'Отошел')], default='offline', max_length=10)),
                ('groups', models.ManyToManyField(related_name='managers', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='manager_permissions', to='auth.permission', verbose_name='permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ManagerActions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=256, verbose_name='Действие')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='app.manager', verbose_name='Менеджер')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена товара')),
                ('total_product_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Итоговая цена товара')),
                ('name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Название продукта')),
                ('is_first_buy', models.BooleanField(default=False, verbose_name='Первая ли это покупка')),
                ('card_holder_id', models.CharField(max_length=8, verbose_name='Id менеджера, чей картой производится оплата')),
                ('status', models.CharField(choices=[('wait_manager', 'Ожидаем ответа менеджера'), ('dialog_with_manager', 'Общаемся с менеджером'), ('complite', 'Завершен')], default='wait_manager', max_length=20, verbose_name='Статус заказа')),
                ('pay_status', models.CharField(choices=[('wait', 'Ожидае оплату'), ('complite', 'Оплата пришла'), ('cansel', 'Оплата не требуется или не пришла')], default='wait', max_length=20, verbose_name='Статус оплаты')),
                ('type', models.CharField(choices=[('buy', 'Купить'), ('not_find_product', 'Не нашел товар'), ('other', 'Другой вопрос')], default='buy', max_length=20, verbose_name='Тип обращения')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='Время заказа')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders_for_user', to='app.client', verbose_name='Клиент заказа')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='orders_for_manager', to='app.manager', verbose_name='Менеджер заказа')),
            ],
        ),
        migrations.CreateModel(
            name='ReferralLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Имя ссылки')),
                ('type', models.CharField(choices=[('yt', 'Ютуб'), ('vk', 'Вконтакте'), ('tk', 'Тикток'), ('tv', 'Твитч'), ('tg', 'Телеграм'), ('ref', 'Реферальная система')], default='ref', max_length=32)),
                ('money', models.DecimalField(decimal_places=2, default=0, max_digits=100, verbose_name='Денег получено с ссылки')),
                ('last_invite_buyer_user_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Время, когда ссылка привела последнего пользователя, который купил что-то')),
                ('link', models.CharField(max_length=128, verbose_name='Ссылка')),
                ('new_user_buy', models.ManyToManyField(blank=True, related_name='new_user_referrals', to='app.order', verbose_name='Покупки новых пользователей')),
                ('old_user_buy', models.ManyToManyField(blank=True, related_name='old_user_referrals', to='app.order', verbose_name='Покупки старых пользователей')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referal_links', to='app.client', verbose_name='Создатель реферальной ссылки')),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='invite_ref',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='usr', to='app.referrallink', verbose_name='Ссылка-приглашения'),
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст сообщения')),
                ('file_id', models.CharField(blank=True, default='', max_length=256, null=True, verbose_name='Аватарка пользователя 1')),
                ('base64_file', models.TextField(blank=True, null=True, verbose_name='Файл в формате base64')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='Дата сообщения')),
                ('sender', models.CharField(choices=[('manager', 'Менеджер'), ('client', 'Клиент')], max_length=10, verbose_name='Отправитель')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='texts', to='app.order', verbose_name='Заказ')),
            ],
        ),
    ]
